/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRegisterCircuitVerifier,
  IRegisterCircuitVerifierInterface,
} from "../../../../../@selfxyz/contracts/contracts/interfaces/IRegisterCircuitVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[3]",
        name: "pubSignals",
        type: "uint256[3]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRegisterCircuitVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IRegisterCircuitVerifierInterface {
    return new utils.Interface(_abi) as IRegisterCircuitVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRegisterCircuitVerifier {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IRegisterCircuitVerifier;
  }
}

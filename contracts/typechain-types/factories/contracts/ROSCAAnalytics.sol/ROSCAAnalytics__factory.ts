/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ROSCAAnalytics,
  ROSCAAnalyticsInterface,
} from "../../../contracts/ROSCAAnalytics.sol/ROSCAAnalytics";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "PYUSD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IROSCAFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveCircles",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCircles",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
    ],
    name: "getAvailableCircles",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlatformStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalCircles",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeCircles",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "completedCircles",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalMembers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalValueLocked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalRevenue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "avgSuccessRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCountries",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCAAnalytics.PlatformStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserActiveCircles",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0806040523461010457602061002e60049261149080380380916100248285610109565b8339810190610142565b61003733610161565b6001600160a01b03166080819052604051639e19789d60e01b815292839182905afa9081156100f8576000916100c9575b506001600160a01b031660a05261007e33610161565b6040516112e790816101a98239608051818181610161015281816101b60152818161028c01528181610577015281816108680152610be2015260a05181818161050b0152610c320152f35b6100eb915060203d6020116100f1575b6100e38183610109565b810190610142565b38610068565b503d6100d9565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761012c57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261010457516001600160a01b03811681036101045790565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608080604052600436101561001357600080fd5b60003560e01c908163136d888314610b9157508063715018a614610b4a5780638da5cb5b14610b2157806391185355146107d157806399961ed31461053a5780639e19789d146104f5578063b7c799ca1461026c578063b930535314610190578063c45a01551461014b5763f2fde38b1461008d57600080fd5b34610146576020366003190112610146576004356001600160a01b03811690819003610146576100bb611239565b80156100f257600080546001600160a01b03198116831782556001600160a01b0316906000805160206112928339815191529080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b34610146576000366003190112610146576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101465760003660031901126101465760405163e63e686b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102605760009161022b575b506101f981611207565b9060005b81811061021657604051806102128582610fa7565b0390f35b8080610224600193866111dd565b52016101fd565b906020823d602011610258575b8161024560209383610f69565b81010312610255575051816101ef565b80fd5b3d9150610238565b6040513d6000823e3d90fd5b346101465760003660031901126101465760405163e63e686b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081600481855afa908115610260576000916104c3575b506000805b8281106103f357506102e390611207565b9160009060005b8381106102ff57604051806102128782610fa7565b604051630bc5e0f360e41b815260048101829052602081602481865afa9081156102605760049160009182916103c5575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa801561026057600091829161039c575b5081610393575b50610373575b6001016102ea565b9161038b8184610385600194896111dd565b5261113e565b92905061036b565b90501586610365565b90506103b9913d8091833e6103b18183610f69565b810190611030565b9350915050908761035e565b6103e6915060203d81116103ec575b6103de8183610f69565b810190610fe1565b88610330565b503d6103d4565b604051630bc5e0f360e41b815260048101829052602081602481885afa9081156102605760049160009182916104a5575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa8015610260576000918291610484575b508161047b575b50610467575b6001016102d2565b9061047360019161113e565b91905061045f565b90501585610459565b9050610499913d8091833e6103b18183610f69565b93509150509086610452565b6104bd915060203d81116103ec576103de8183610f69565b87610424565b906020823d6020116104ed575b816104dd60209383610f69565b81010312610255575051826102cd565b3d91506104d0565b34610146576000366003190112610146576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610146576020366003190112610146576004356001600160a01b0381169081900361014657604051630e96c6b560e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690600081602481855afa908115610260576000916107b0575b506000805b82518110156106a0576105d081846111dd565b5160405190630bc5e0f360e41b82526004820152602081602481885afa908115610260576004916000918291610682575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa8015610260576000918291610661575b5081610658575b50610644575b6001016105bd565b9061065060019161113e565b91905061063c565b90501585610636565b9050610676913d8091833e6103b18183610f69565b9350915050908661062f565b61069a915060203d81116103ec576103de8183610f69565b87610601565b506106aa90611207565b906000805b82518110156107a2576106c281846111dd565b5160405190630bc5e0f360e41b82526004820152602081602481895afa908115610260576004916000918291610784575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa8015610260576000918291610763575b508161075a575b50610736575b6001016106af565b9061075260019161074784866111dd565b5161038582886111dd565b91905061072e565b90501586610728565b9050610778913d8091833e6103b18183610f69565b93509150509087610721565b61079c915060203d81116103ec576103de8183610f69565b886106f3565b604051806102128682610fa7565b6107cb913d8091833e6107c38183610f69565b810190611164565b826105b8565b34610146576020366003190112610146576004356001600160401b038111610146573660238201121561014657806004013561080c81610f8c565b9161081a6040519384610f69565b818352366024838301011161014657816000926024602093018386013783010152805160009015610af857505b60405163185a3f2160e01b81526020600482018190528251602483018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693600092849260449284926108ab9183918587019101611000565b601f01601f19168101030181855afa90811561026057600091610adf575b506000805b82518110156109cc576108e181846111dd565b5160405190630bc5e0f360e41b82526004820152602081602481885afa9081156102605760049160009182916109ae575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa90811561026057600080918190829461098e575b50159283610985575b5082610977575b5050610963575b6001016108ce565b9061096f60019161113e565b91905061095b565b602001511190508580610954565b1592508761094d565b9250506109a592503d8091833e6103b18183610f69565b93915088610944565b6109c6915060203d81116103ec576103de8183610f69565b87610912565b506109d78391611207565b906000805b84518110156107a2576109ef81866111dd565b5160405190630bc5e0f360e41b82526004820152602081602481875afa908115610260576004916000918291610ac1575b5060405163e2a9a17160e01b815292839182906001600160a01b03165afa908115610260576000809181908294610aa1575b50159283610a98575b5082610a8a575b5050610a71575b6001016109dc565b90610a8260019161074784886111dd565b919050610a69565b602001511190508680610a62565b15925088610a5b565b925050610ab892503d8091833e6103b18183610f69565b93915089610a52565b610ad9915060203d81116103ec576103de8183610f69565b88610a20565b610af2913d8091833e6107c38183610f69565b826108c9565b50506040805190610b099082610f69565b600681526511d313d0905360d21b6020820152610847565b34610146576000366003190112610146576000546040516001600160a01b039091168152602090f35b3461014657600036600319011261014657610b63611239565b600080546001600160a01b0319811682556001600160a01b03166000805160206112928339815191528280a3005b346101465760003660031901126101465760e081610bb0600093610f37565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152015260018060a01b037f00000000000000000000000000000000000000000000000000000000000000001660405163e63e686b60e01b8152602081600481855afa90811561026057600091610f05575b5060009182908180807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165b868210610d9757505084159586610d8957606483029683880460641484151715610d7357610d5d5760208660049804945b60405163f213edb960e01b815298899182905afa92831561026057600093610d27575b610100975060e0604051610cc281610f37565b8881526020810197885260408101928352606081019384526080810194855260a0810195865260c081019687520195600587526040519788525160208801525160408701525160608601525160808501525160a08401525160c08301525160e0820152f35b92506020873d602011610d55575b81610d4260209383610f69565b8101031261014657610100965192610caf565b3d9150610d35565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600496506020600094610c8c565b9094604051630bc5e0f360e41b8152866004820152602081602481895afa90811561026057600091610ee7575b5060405163e2a9a17160e01b81526001600160a01b03919091169890936000856004818d5afa9182156102605760009081968294610ebe575b5090610e0891611131565b99604051906370a0823160e01b82526004820152602081602481885afa90811561026057600091610e8b575b50610e3e91611131565b9380610e83575b15610e5f5750610e5660019161113e565b955b0190610c5b565b959095610e6f575b600190610e58565b92610e7b60019161113e565b939050610e67565b508015610e45565b906020823d8211610eb6575b81610ea460209383610f69565b81010312610255575051610e3e610e34565b3d9150610e97565b909350610e089650610ed9913d8091833e6103b18183610f69565b909890959293509050610dfd565b610eff915060203d81116103ec576103de8183610f69565b89610dc4565b906020823d602011610f2f575b81610f1f60209383610f69565b8101031261025557505182610c27565b3d9150610f12565b61010081019081106001600160401b03821117610f5357604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610f5357604052565b6001600160401b038111610f5357601f01601f191660200190565b602060408183019282815284518094520192019060005b818110610fcb5750505090565b8251845260209384019390920191600101610fbe565b9081602091031261014657516001600160a01b03811681036101465790565b60005b8381106110135750506000910152565b8181015183820152602001611003565b5190811515820361014657565b9060a0828203126101465781516001600160401b0381116101465782019060e082820312610146576040519160e083016001600160401b03811184821017610f535760409081528151845260208083015190850152818101519084015260608101516001600160401b0381116101465781019180601f84011215610146578251926110ba84610f8c565b916110c86040519384610f69565b848352602085830101116101465760c0936110e99160208085019101611000565b60608401526080810151608084015260a081015160a0840152015160c08201529160208201519160408101519161112e608061112760608501611023565b9301611023565b90565b91908201809211610d7357565b6000198114610d735760010190565b6001600160401b038111610f535760051b60200190565b602081830312610146578051906001600160401b03821161014657019080601f830112156101465781516111978161114d565b926111a56040519485610f69565b81845260208085019260051b82010192831161014657602001905b8282106111cd5750505090565b81518152602091820191016111c0565b80518210156111f15760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906112118261114d565b61121e6040519182610f69565b828152809261122f601f199161114d565b0190602036910137565b6000546001600160a01b0316330361124d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220f9abf9c24b7c5aa28772f6edb7b87b55e7561cff5b14d687087b35e2f0e1039764736f6c634300081c0033";

type ROSCAAnalyticsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ROSCAAnalyticsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ROSCAAnalytics__factory extends ContractFactory {
  constructor(...args: ROSCAAnalyticsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ROSCAAnalytics> {
    return super.deploy(_factory, overrides || {}) as Promise<ROSCAAnalytics>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  override attach(address: string): ROSCAAnalytics {
    return super.attach(address) as ROSCAAnalytics;
  }
  override connect(signer: Signer): ROSCAAnalytics__factory {
    return super.connect(signer) as ROSCAAnalytics__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ROSCAAnalyticsInterface {
    return new utils.Interface(_abi) as ROSCAAnalyticsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ROSCAAnalytics {
    return new Contract(address, _abi, signerOrProvider) as ROSCAAnalytics;
  }
}

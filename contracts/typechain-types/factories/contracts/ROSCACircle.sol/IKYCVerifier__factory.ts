/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IKYCVerifier,
  IKYCVerifierInterface,
} from "../../../contracts/ROSCACircle.sol/IKYCVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserVerificationDetails",
    outputs: [
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        internalType: "string",
        name: "nationality",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "ageAtVerification",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "verificationTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isHuman",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "passedOFACCheck",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "requiredCountry",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "circleMinAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "circleMaxAge",
        type: "uint256",
      },
    ],
    name: "isEligibleForROSCA",
    outputs: [
      {
        internalType: "bool",
        name: "eligible",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IKYCVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IKYCVerifierInterface {
    return new utils.Interface(_abi) as IKYCVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKYCVerifier {
    return new Contract(address, _abi, signerOrProvider) as IKYCVerifier;
  }
}

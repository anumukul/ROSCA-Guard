/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ROSCACircle,
  ROSCACircleInterface,
} from "../../../contracts/ROSCACircle.sol/ROSCACircle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pyusd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kycVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "monthlyAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMembers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "minAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "platformFeePercent",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.CircleParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRounds",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalYield",
        type: "uint256",
      },
    ],
    name: "CircleCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expectedEndTime",
        type: "uint256",
      },
    ],
    name: "CircleStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ContributionMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "penalty",
        type: "uint256",
      },
    ],
    name: "EmergencyExit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nationality",
        type: "string",
      },
    ],
    name: "MemberJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "PayoutDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newScore",
        type: "uint256",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "YieldEarned",
    type: "event",
  },
  {
    inputs: [],
    name: "PYUSD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "addYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "circleParams",
    outputs: [
      {
        internalType: "uint256",
        name: "monthlyAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMembers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "platformFeePercent",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circleStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributionTimestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributePayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasContributedCurrentRound",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasReceivedPayout",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reputationScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalContributions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "missedContributions",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "nationality",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "currentAge",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRounds",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "roundNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "payoutAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contributorCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCompleted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "yieldEarned",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.RoundInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCircleInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "monthlyAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMembers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "minAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "platformFeePercent",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.CircleParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "getContributionStatus",
    outputs: [
      {
        internalType: "bool",
        name: "hasContributed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canContribute",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "contributionTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRoundInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "roundNumber",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalCollected",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "payoutAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contributorCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCompleted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "yieldEarned",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.RoundInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "getMemberInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasContributedCurrentRound",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasReceivedPayout",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reputationScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalContributions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "missedContributions",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "nationality",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "currentAge",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.Member",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasReceivedPayout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinCircle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kycVerifier",
    outputs: [
      {
        internalType: "contract IKYCVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "memberAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "hasContributedCurrentRound",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasReceivedPayout",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reputationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "joinedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalContributions",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "missedContributions",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nationality",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "currentAge",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "roundContributions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalCollected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoutAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contributorCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCompleted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "yieldEarned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFeesCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalYieldEarned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052346104e5576134bf80380380610019816104ea565b92833981019060a0818303126104e5576100328161050f565b9061003f6020820161050f565b9261004c6040830161050f565b60608301519091906001600160401b0381116104e55783019160e0838303126104e55760405160e081016001600160401b0381118282101761036657604052835181526020840151906020810191825260408501519260408201938452606086015160018060401b0381116104e557860185601f820112156104e5578051906001600160401b038211610366576100ec601f8301601f19166020016104ea565b96828852602083830101116104e55760005b8281106104d05750506020600091870101526060820194855260808601519860808301998a52610148608060c060a08a01519960a087019a8b5201519960c086019a8b520161050f565b98600160005561015733610523565b6001600160a01b031690811561048b576001600160a01b031690811561044657835115610401578451600281101590816103f5575b50156103b0576101f489511161037c5760805260a05260c05251600255516003555160045551805194906001600160401b03861161036657600554600181811c9116801561035c575b602082101461034657601f81116102fd575b50602090601f87116001146102915761022b969160009183610286575b50508160011b916000199060031b1c1916176005555b516006555160075551600855610523565b604051612f52908161056d82396080518181816103a101528181610c6c015281816115fd015281816117870152611c42015260a0518181816102a90152610be8015260c051818181610b5601528181610e530152611f970152f35b015190503880610204565b90601f198716916005600052816000209260005b8181106102e5575091600193918961022b9a94106102cc575b505050811b0160055561021a565b015160001960f88460031b161c191690553880806102be565b929360206001819287860151815501950193016102a5565b60056000526020600020601f880160051c8101916020891061033c575b601f0160051c01905b81811061033057506101e7565b60008155600101610323565b909150819061031a565b634e487b7160e01b600052602260045260246000fd5b90607f16906101d5565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527f496e76616c6964206d656d62657220636f756e740000000000000000000000006044820152606490fd5b6014915011153861018c565b60405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206d6f6e74686c7920616d6f756e74000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527f496e76616c6964204b59432076657269666965720000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964205059555344206164647265737300000000000000000000006044820152606490fd5b80602080928401015182828b010152016100fe565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761036657604052565b51906001600160a01b03821682036104e557565b600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe6080604052600436101561001257600080fd5b60003560e01c806310cac8a514611b4a578063205de36f14611b0257806322f3e2d414611adf57806326f6f76f146119e457806327c830a9146119be578063346477c71461197f57806338670563146116fc5780633dd35279146116c25780634a4e3bd51461169b57806351858e271461166f5780635641ec03146112e55780635c709042146112c75780635daf08ca146112145780635f1231ea1461115e57806360c6d8ae14611140578063715018a6146110f5578063747dff421461103e5780637c0f6b3514610f545780638736aba814610de45780638a19c8bc14610dc65780638c65c81f14610d2e5780638da5cb5b14610d055780639d9a66ef14610c9b5780639e19789d14610c56578063a230c52414610c17578063b937e7cc14610bd2578063bdc35b7414610b85578063c45a015514610b40578063cc00967914610b22578063e2a9a17114610a0c578063e5066bbf1461094a578063e6ba3bff14610273578063f2fde38b146101bd5763fa391c641461019257600080fd5b346101b85760003660031901126101b857602060ff60145460081c166040519015158152f35b600080fd5b346101b85760203660031901126101b8576101d66120a9565b6101de61275b565b6001600160a01b0316801561021f57600180546001600160a01b0319811683179091556001600160a01b0316600080516020612efd833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101b85760003660031901126101b857600654600754604051636545665b60e11b8152336004820152608060248201526005547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169391928391600091906102e3816120f4565b9081608486015260018116908160001461092757506001146108dd575b50908291600094604484015260648301520381855afa9081156107a7576000908192610884575b501561085c5750610336612a1c565b60ff6014541661081e5760095460035411156107eb5733600052600c60205260ff604060002054166107b35760006024916040519283809263eddaa0bd60e01b82523360048301525afa80156107a75760008092819261072d575b50156106f4576103c560025430337f0000000000000000000000000000000000000000000000000000000000000000612a72565b60025490604051916103d68361212e565b33835260208301600081526040840191600083526060850160648152608086019042825260a0870192835260c08701936000855260e08801958987526101008901978852600954600160401b8110156106c85780600161043992016009556120bf565b9990996106de575189546001600160a01b0319166001600160a01b03919091161789559051610478919061046f9015158a61252a565b511515886124b5565b51600187015551600286015551600385015551600484015551805160058401916001600160401b0382116106c8576104ba826104b485546120f4565b85612716565b602090601f831160011461065d5791806104f0926006969594600092610652575b50508160011b916000199060031b1c19161790565b90555b51910155600954600019810190811161063c5733600052600b60205260406000205533600052600c6020526040600020600160ff19825416179055600954907f067f43f671a4cbf0288765fdf37129831f90e1a2823a94a40f8b685c78f44cd06040518061056333948683612696565b0390a260035414610576575b6001600055005b600160ff1960145416176014554260115560006010556105dc60405161059b8161212e565b60008152600060208201526000604082015260006060820152600060808201524260a0820152600060c0820152600060e082015260006101008201526127f3565b6105e4612cb3565b60045462278d0081029080820462278d00149015171561063c57604061062b7faf0f41c2e769faca4f3422a53417b14043b989e8d29fd8aa1f0fb10273d20f1f92426124a8565b8151904282526020820152a161056f565b634e487b7160e01b600052601160045260246000fd5b0151905088806104db565b90601f1983169184600052816000209260005b8181106106b0575091600193918560069897969410610697575b505050811b0190556104f3565b015160001960f88460031b161c1916905587808061068a565b92936020600181928786015181550195019301610670565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b8152602060048201526011602482015270155cd95c881b9bdd081d995c9a599a5959607a1b6044820152606490fd5b925090503d8082843e6107408184612165565b820160c0838203126107a357610755836126b0565b602084015190926001600160401b0382116107a05750906107779184016126bd565b9061079660a060408501519461078f608082016126b0565b50016126b0565b5090919083610391565b80fd5b5080fd5b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f20b63932b0b23c90309036b2b6b132b960811b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a10da5c98db1948199d5b1b60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527510da5c98db1948185b1c9958591e481cdd185c9d195960521b6044820152606490fd5b60405162461bcd60e51b8152602060048201529081906108809060248301906122f4565b0390fd5b909291503d8084833e6108978183612165565b81016040828203126108d9576108ac826126b0565b602083015190926001600160401b0382116108d5576108ce93949550016126bd565b9083610327565b8580fd5b8380fd5b60056000908152919250600080516020612ebd8339815191525b81831061090d575050820160a401906000610300565b805460a484890101528694506020909201916001016108f7565b60ff191660a48087019190915291151560051b8501909101925060009050610300565b346101b85760003660031901126101b857600a546109678161267f565b906109756040519283612165565b808252600a6000908152602083019190600080516020612edd833981519152835b8383106109ee5784866040519182916020830190602084525180915260408301919060005b8181106109c9575050500390f35b919350916020610120826109e0600194885161238e565b0194019101918493926109bb565b600960206001926109fe8561260c565b815201920192019190610996565b346101b85760003660031901126101b857600060c0604051610a2d8161214a565b8281528260208201528260408201526060808201528260808201528260a08201520152600954601054906014549060ff60405192610a6a8461214a565b600254845260035494602085019586526004549360408601948552610a8d612188565b94606087019586526006549560808801968752610ae96007549160a08a019283526008549360c08b019485526040519b8c9b60a08d525160a08d01525160c08c01525160e08b01525160e06101008b01526101808a01906122f4565b96516101208901525161014088015251610160870152602086015260408501528181161515606085015260081c16151560808301520390f35b346101b85760003660031901126101b8576020601254604051908152f35b346101b85760003660031901126101b8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b85760403660031901126101b857610b9e612093565b600435600052600e60205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101b85760003660031901126101b8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b85760203660031901126101b8576001600160a01b03610c386120a9565b16600052600c602052602060ff604060002054166040519015158152f35b346101b85760003660031901126101b8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101b85760003660031901126101b85760025460035490600454610cbe612188565b9060065491610cf1600754916008549360405197889788526020880152604087015260e0606087015260e08601906122f4565b92608085015260a084015260c08301520390f35b346101b85760003660031901126101b8576001546040516001600160a01b039091168152602090f35b346101b85760203660031901126101b857600435600a548110156101b857610d5861012091612409565b5080549060018060a01b0360018201541690600281015460038201546004830154600584015491600685015493600860ff60078801541696015496604051988952602089015260408801526060870152608086015260a085015260c0840152151560e0830152610100820152f35b346101b85760003660031901126101b8576020601054604051908152f35b346101b85760403660031901126101b8576004356024356001600160401b0381116101b857366023820112156101b8578060040135610e22816123ee565b91610e306040519384612165565b81835236602483830101116101b8578160009260246020930183860137830101527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f125781610eaf7fd47af06cdc4e37a850f1f6146824e5e6bd3a9b59dc58eb6c1212192719e33510936012546124a8565b601255601054600a54811080610efa575b610eda575b50610ed560405192839283612696565b0390a1005b610ee5600891612409565b5001610ef28282546124a8565b905583610ec5565b5060ff6007610f0883612409565b5001541615610ec0565b60405162461bcd60e51b815260206004820152601a60248201527913db9b1e48199858dd1bdc9e4818d85b88185919081e5a595b1960321b6044820152606490fd5b346101b85760003660031901126101b857600954610f718161267f565b90610f7f6040519283612165565b808252600960009081526020830191907f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af835b83831061102057848660405191829160208301906020845251809152604083019060408160051b85010192916000905b828210610ff157505050500390f35b919360019193955060206110108192603f198a82030186528851612319565b9601920192018594939192610fe2565b6007602060019261103085612591565b815201920192019190610fb2565b346101b85760003660031901126101b85760006101006040516110608161212e565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152601054600a548110156110c0576110b16110ab61012092612409565b5061260c565b6110be604051809261238e565bf35b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fd5b346101b85760003660031901126101b85761110e61275b565b600180546001600160a01b031981169091556000906001600160a01b0316600080516020612efd8339815191528280a3005b346101b85760003660031901126101b8576020601354604051908152f35b346101b85760203660031901126101b8576111776120a9565b60006101006040516111888161212e565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e0820152015260018060a01b031680600052600c6020526111da60ff60406000205416612556565b600052600b6020526112106111fc6111f66040600020546120bf565b50612591565b604051918291602083526020830190612319565b0390f35b346101b85760203660031901126101b8576004356009548110156101b85761123d60ff916120bf565b508054906112bc6001820154916002810154600382015460048301549160066112686005860161222f565b9401549560405198899860018060a01b0381168a52818160a01c16151560208b015260a81c16151560408901526060880152608087015260a086015260c085015261012060e08501526101208401906122f4565b906101008301520390f35b346101b85760003660031901126101b8576020601154604051908152f35b346101b85760003660031901126101b85733600052600c60205261131060ff604060002054166124e8565b611318612a1c565b60ff60145460081c1661162f5733600052600b60205260a06113416111f66040600020546120bf565b015133600052600b60205261139c6113606111f66040600020546120bf565b6010546032606061138361137a60a0860194855190612468565b6009549061247b565b60021c9301511060001461162657600a905104906124a8565b90818111806115ed575b33600052600c6020526113c060ff60406000205416612556565b33600052600b602052604060002054600954600019810190811161063c57808203611516575b505060095480156115005760001901906113ff826120bf565b9290926106de576000600684828896558260018201558260028201558260038201558260048201556005810161143581546120f4565b90816114bd575b5050015560095533600052600b6020526000604081205533600052600c602052604060002060ff1981541690556000146114b3576114799161249b565b905b60405191825260208201527fa4c9c75415df35968a558e9feb45cc3bdba07d1bf6ab989adead7488a720d2c160403392a26001600055005b505060009061147b565b81601f8693116001146114d45750555b888061143c565b818352602083206114f091601f0160051c8101906001016126ff565b80825281602081209155556114cd565b634e487b7160e01b600052603160045260246000fd5b61151f906120bf565b50611529826120bf565b9190916106de57808203611564575b5050611543816120bf565b50546001600160a01b03166000908152600b602052604090205583806113e6565b805482546001600160a01b0319166001600160a01b0391909116178255805460069182916115989060a01c60ff168561252a565b6115a960ff825460a81c16856124b5565b600181015460018501556002810154600285015560038101546003850155600481015460048501556115e16005820160058601612ab6565b01549101558480611538565b6116216115fa848461249b565b337f00000000000000000000000000000000000000000000000000000000000000006127b3565b6113a6565b506000906124a8565b60405162461bcd60e51b815260206004820152601860248201527710da5c98db1948185b1c9958591e4818dbdb5c1b195d195960421b6044820152606490fd5b346101b85760003660031901126101b85761168861275b565b6014805462ff0000191662010000179055005b346101b85760003660031901126101b8576116b461275b565b6014805462ff000019169055005b346101b85760203660031901126101b8576001600160a01b036116e36120a9565b16600052600b6020526020604060002054604051908152f35b346101b85760003660031901126101b85733600052600c60205261172760ff604060002054166124e8565b61174460145460ff8116908161196f575b81611960575b50612428565b61174c612a1c565b6117546129c4565b1561191d576010546000908152600e6020908152604080832033845290915290205460ff166118d8576117ab60025430337f0000000000000000000000000000000000000000000000000000000000000000612a72565b601080546000908152600e6020908152604080832033808552908352818420805460ff1916600117905593548352600f8252808320938352928152828220429055600b905220546117fb906120bf565b50600160a01b60ff60a01b1982541617905560025433600052600b602052611836600361182c6040600020546120bf565b50019182546124a8565b90556004611845601054612409565b50016118518154612547565b9055600254611866600261182c601054612409565b9055600254601054907fbe446d8cd0c11cac7c17817d3cc2a18d11008ab0c439d03564c978df97805728604051806118a23394864291846124d2565b0390a260046118b082612409565b500154600954146118c2576001600055005b6118cb90612409565b506006429101558061056f565b60405162461bcd60e51b815260206004820152601e60248201527f416c726561647920636f6e7472696275746564207468697320726f756e6400006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527a13dd5d1cda59194818dbdb9d1c9a589d5d1a5bdb881c195c9a5bd9602a1b6044820152606490fd5b60ff915060101c16158261173e565b905060ff8160081c161590611738565b346101b85760203660031901126101b8576001600160a01b036119a06120a9565b16600052600d602052602060ff604060002054166040519015158152f35b346101b85760003660031901126101b857602060ff60145460101c166040519015158152f35b346101b85760203660031901126101b8576119fd6120a9565b6010549081600052600e602052604060002060018060a01b03821660005260205260ff604060002054169082600a5411600014611ad4576005611a3f84612409565b500154926220f580840180941161063c57608093915b611a5d6129c4565b9182611acb575b82611aa8575b600052600f60205260406000209060018060a01b03166000526020526040600020549160405193151584526020840152151560408301526060820152f35b6001600160a01b0382166000908152600c602052604090205460ff169250611a6a565b84159250611a64565b608092600091611a55565b346101b85760003660031901126101b857602060ff601454166040519015158152f35b346101b85760403660031901126101b857611b1b612093565b600435600052600f60205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346101b85760003660031901126101b857611b6361275b565b611b7e60145460ff8116908161196f57816119605750612428565b6010546004611b8c82612409565b5001546009540361204e57611ba081612409565b50600101546001600160a01b0316156120115760ff6007611bc083612409565b50015416611fd2577fc311585c21991a899695756d348134553da213a7d88e1e3d9e3f0ee82f65fc74611c32611c40611bf884612409565b50600101546001600160a01b031693611c3b6002611c1583612409565b500154916008612710611c29825486612468565b04958692612409565b5001549261249b565b6124a8565b7f0000000000000000000000000000000000000000000000000000000000000000611c6c8286836127b3565b8280611f91575b505083600052600b602052611c8c6040600020546120bf565b50805460ff60a81b1916600160a81b1790556000848152600d60205260409020805460ff191660011790556010548190600390611cc890612409565b500155611cd6601054612409565b506006429101556007611cea601054612409565b5001600160ff19825416179055611d0a60105492604051938493846124d2565b0390a260005b600954811015611e7c576001611d25826120bf565b5001549060ff611d34826120bf565b505460a01c1615611e3957611d8960105480600052600f6020526005611d80604080600020611d62876120bf565b50546001600160a01b03166000908152602091909152205492612409565b5001549061249b565b62093a80811015611e095750600a820180921161063c576001915b61012c8111611e00575b8083611db9846120bf565b5001557ffc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c8216020611de8846120bf565b50858060a01b0390541692604051908152a201611d10565b5061012c611dae565b621275001115611e26576005820180921161063c57600191611da4565b6002820180921161063c57600191611da4565b6000600f831115611e735750600e19820191821161063c576001915b6004611e60836120bf565b5001611e6c8154612547565b9055611da4565b60019250611e55565b6010546001810180821161063c5760095411611efd575061010061ffff196014541617601455611eb160025460095490612468565b6010546001810180911161063c57611eea817f63750e020024758752f191ac4571f8fcac3b6ae73e742a826460f293dfe0df9493612468565b90610ed5601254604051938493846124d2565b611f0690612547565b60105560005b600954811015611f345780611f226001926120bf565b50805460ff60a01b1916905501611f0c565b50611f8760105460405190611f488261212e565b8152600060208201526000604082015260006060820152600060808201524260a0820152600060c0820152600060e082015260006101008201526127f3565b611f8f612cb3565b005b611fbc917f0000000000000000000000000000000000000000000000000000000000000000906127b3565b611fc8826013546124a8565b6013558482611c73565b60405162461bcd60e51b8152602060048201526017602482015276149bdd5b9908185b1c9958591e4818dbdb5c1b195d1959604a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274139bc81c9958da5c1a595b9d081cd95b1958dd1959605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f4e6f7420616c6c20636f6e747269627574696f6e7320726563656976656400006044820152606490fd5b602435906001600160a01b03821682036101b857565b600435906001600160a01b03821682036101b857565b6009548110156120de5760096000526007602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015612124575b602083101461210e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612103565b61012081019081106001600160401b038211176106c857604052565b60e081019081106001600160401b038211176106c857604052565b601f909101601f19168101906001600160401b038211908210176106c857604052565b604051906000826005549161219c836120f4565b808352926001811690811561221057506001146121c2575b6121c092500383612165565b565b50600560009081529091600080516020612ebd8339815191525b8183106121f45750509060206121c0928201016121b4565b60209193508060019154838589010152019101909184926121dc565b602092506121c094915060ff191682840152151560051b8201016121b4565b9060405191826000825492612243846120f4565b80845293600181169081156122af5750600114612268575b506121c092500383612165565b90506000929192526020600020906000915b8183106122935750509060206121c0928201013861225b565b602091935080600191548385890101520191019091849261227a565b9050602092506121c094915060ff191682840152151560051b8201013861225b565b60005b8381106122e45750506000910152565b81810151838201526020016122d4565b9060209161230d815180928185528580860191016122d1565b601f01601f1916010190565b9060018060a01b038251168152602082015115156020820152604082015115156040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c08201526101008061238560e085015161012060e08601526101208501906122f4565b93015191015290565b61010080918051845260018060a01b03602082015116602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e0810151151560e08501520151910152565b6001600160401b0381116106c857601f01601f191660200190565b600a548110156120de57600a6000526009602060002091020190600090565b1561242f57565b60405162461bcd60e51b8152602060048201526011602482015270436972636c65206e6f742061637469766560781b6044820152606490fd5b8181029291811591840414171561063c57565b8115612485570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161063c57565b9190820180921161063c57565b805460ff60a81b191691151560a81b60ff60a81b16919091179055565b6040919493926060820195825260208201520152565b156124ef57565b60405162461bcd60e51b81526020600482015260136024820152722737ba10309031b4b931b6329036b2b6b132b960691b6044820152606490fd5b805460ff60a01b191691151560a01b60ff60a01b16919091179055565b600019811461063c5760010190565b1561255d57565b60405162461bcd60e51b815260206004820152600c60248201526b2737ba10309036b2b6b132b960a11b6044820152606490fd5b9060405161259e8161212e565b6101006006829460ff815460018060a01b0381168652818160a01c161515602087015260a81c16151560408501526001810154606085015260028101546080850152600381015460a0850152600481015460c08501526126006005820161222f565b60e08501520154910152565b906040516126198161212e565b8254815260018301546001600160a01b03166020820152600283015460408201526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152600783015460ff16151560e0820152600890920154610100830152565b6001600160401b0381116106c85760051b60200190565b6040906126ad9392815281602082015201906122f4565b90565b519081151582036101b857565b81601f820112156101b85780516126d3816123ee565b926126e16040519485612165565b818452602082840101116101b8576126ad91602080850191016122d1565b81811061270a575050565b600081556001016126ff565b9190601f811161272557505050565b6121c0926000526020600020906020601f840160051c83019310612751575b601f0160051c01906126ff565b9091508190612744565b6001546001600160a01b0316330361276f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526121c0916127ee606483612165565b612b98565b600a54600160401b8110156106c85760018101600a556000600a548210156129b057600a90528151600080516020612edd8339815191526009929092029182015560208201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9820180546001600160a01b039092166001600160a01b031990921691909117905560408201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa82015560608201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab82015560808201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ac82015560a08201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ad82015560c08201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ae82015560e08201517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2af8201805460ff191691151560ff16919091179055610100909101517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b090910155565b634e487b7160e01b81526032600452602490fd5b60ff60145416158015612a0e575b612a095760056129e3601054612409565b5001546220f58081019081811161063c574210159081612a01575090565b905042111590565b600090565b50601054600a5411156129d2565b600260005414612a2d576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526121c0916127ee608483612165565b919091828114612b9357612aca83546120f4565b6001600160401b0381116106c857612aec81612ae684546120f4565b84612716565b600093601f8211600114612b2d57612b1e9293948291600092612b225750508160011b916000199060031b1c19161790565b9055565b0154905038806104db565b845260208085208386529085209094601f198316815b818110612b7b57509583600195969710612b62575b505050811b019055565b015460001960f88460031b161c19169055388080612b58565b9192600180602092868b015481550194019201612b43565b509050565b604080519092612c1c926001600160a01b0316906000908190612bbb8786612165565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d15612cab573d91612c00836123ee565b92612c0d87519485612165565b83523d6000602085013e612e47565b8051908115918215612c89575b505015612c335750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b81925090602091810103126101b8576020612ca491016126b0565b3880612c29565b606091612e47565b6000806000600954905b818110612d47575050506001600160a01b03811615612d04576001612ce3601054612409565b500180546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152601b60248201527a139bc8195b1a59da589b19481c9958da5c1a595b9d08199bdd5b99602a1b6044820152606490fd5b612d536111f6826120bf565b604081015115612d67575b50600101612cbd565b606081015162015180612d7e60808401514261249b565b048060011b908082046002149015171561063c57612d9b916124a8565b612dac60a08301516002549061247b565b600a810290808204600a149015171561063c57612dc8916124a8565b60c08201805180158015612dff575b505050848111612de8575b50612d5e565b90516001600160a01b031694509250600138612de2565b60198202918204601914171561063c57600090831115612e3f57505160198102908082046019149015171561063c57612e379161249b565b388080612dd7565b915050612e37565b91929015612ea95750815115612e5b575090565b3b15612e645790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561085c5750805190602001fdfe036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0c65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220e0827ba5a3b69eb99fcc670783a4ec2b374de7eb4823bfed06f65ac3da372f8864736f6c634300081c0033";

type ROSCACircleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ROSCACircleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ROSCACircle__factory extends ContractFactory {
  constructor(...args: ROSCACircleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pyusd: PromiseOrValue<string>,
    _kycVerifier: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _params: ROSCACircle.CircleParamsStruct,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ROSCACircle> {
    return super.deploy(
      _pyusd,
      _kycVerifier,
      _factory,
      _params,
      _creator,
      overrides || {}
    ) as Promise<ROSCACircle>;
  }
  override getDeployTransaction(
    _pyusd: PromiseOrValue<string>,
    _kycVerifier: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _params: ROSCACircle.CircleParamsStruct,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pyusd,
      _kycVerifier,
      _factory,
      _params,
      _creator,
      overrides || {}
    );
  }
  override attach(address: string): ROSCACircle {
    return super.attach(address) as ROSCACircle;
  }
  override connect(signer: Signer): ROSCACircle__factory {
    return super.connect(signer) as ROSCACircle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ROSCACircleInterface {
    return new utils.Interface(_abi) as ROSCACircleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ROSCACircle {
    return new Contract(address, _abi, signerOrProvider) as ROSCACircle;
  }
}

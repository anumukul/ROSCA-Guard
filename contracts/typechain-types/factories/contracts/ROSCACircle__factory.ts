/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ROSCACircle,
  ROSCACircleInterface,
} from "../../contracts/ROSCACircle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pyusd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kycVerifier",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "monthlyAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMembers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "minAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAge",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.CircleParams",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CircleCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "ContributionMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "EmergencyExit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
    ],
    name: "MemberJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
    ],
    name: "PayoutDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "PYUSD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circleParams",
    outputs: [
      {
        internalType: "uint256",
        name: "monthlyAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMembers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAge",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circleStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMembers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasContributed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasReceived",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reputationScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.Member[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCircleInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "monthlyAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMembers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "minAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAge",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.CircleParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "memberCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "getMemberInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "hasContributed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasReceived",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reputationScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ROSCACircle.Member",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getReputationScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isKYCVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "joinCircle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kycVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "memberAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "hasContributed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "hasReceived",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reputationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "joinedAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ROSCACircleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ROSCACircleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ROSCACircle__factory extends ContractFactory {
  constructor(...args: ROSCACircleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pyusd: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _kycVerifier: PromiseOrValue<string>,
    _params: ROSCACircle.CircleParamsStruct,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ROSCACircle> {
    return super.deploy(
      _pyusd,
      _factory,
      _kycVerifier,
      _params,
      _creator,
      overrides || {}
    ) as Promise<ROSCACircle>;
  }
  override getDeployTransaction(
    _pyusd: PromiseOrValue<string>,
    _factory: PromiseOrValue<string>,
    _kycVerifier: PromiseOrValue<string>,
    _params: ROSCACircle.CircleParamsStruct,
    _creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _pyusd,
      _factory,
      _kycVerifier,
      _params,
      _creator,
      overrides || {}
    );
  }
  override attach(address: string): ROSCACircle {
    return super.attach(address) as ROSCACircle;
  }
  override connect(signer: Signer): ROSCACircle__factory {
    return super.connect(signer) as ROSCACircle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ROSCACircleInterface {
    return new utils.Interface(_abi) as ROSCACircleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ROSCACircle {
    return new Contract(address, _abi, signerOrProvider) as ROSCACircle;
  }
}
